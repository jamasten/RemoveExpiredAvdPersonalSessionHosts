{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "7421648116620373927"
    }
  },
  "parameters": {
    "ActionGroupName": {
      "type": "string",
      "defaultValue": "ag-avd-d-use",
      "metadata": {
        "description": "The name of the action group."
      }
    },
    "AutomationAccountName": {
      "type": "string",
      "defaultValue": "aa-avd-d-use",
      "metadata": {
        "description": "The name of the new automation account that will be deployed with this solution."
      }
    },
    "DistributionGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The distribution group that will recieve email alerts when an AIB image build either succeeds or fails."
      }
    },
    "HostPoolName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing AVD host pool to manage expired session hosts."
      }
    },
    "HostPoolResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group for the existing AVD host pool to manage expired session hosts."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location for all the deployed resources and resource group."
      }
    },
    "LogAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "law-avd-d-use",
      "metadata": {
        "description": "The name of the new log analytics workspace that will be deployed with this solution."
      }
    },
    "ResourceGroupName": {
      "type": "string",
      "defaultValue": "rg-avd-d-use",
      "metadata": {
        "description": "The name of the new resource group that will be deployed with this solution"
      }
    },
    "SessionHostExpirationInDays": {
      "type": "int",
      "defaultValue": 90,
      "metadata": {
        "description": "The number of days until an AVD session host expires."
      },
      "minValue": 1,
      "maxValue": 730
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The key / value pairs of metadata for the Azure resources."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THE DEFAULT VALUE!"
      }
    }
  },
  "variables": {
    "RoleAssignments": [
      {
        "scope": "[parameters('HostPoolResourceGroupName')]",
        "roleDefinitionId": "a959dbd1-f747-45e3-8ba6-dd80f235f97c"
      },
      {
        "scope": "[parameters('ResourceGroupName')]",
        "roleDefinitionId": "43d0d8ad-25c7-4714-9337-8ba259a9fe05"
      }
    ],
    "RunbookName": "RemoveExpiredSessionHosts",
    "TimeZone": "[variables('TimeZones')[parameters('Location')]]",
    "TimeZones": {
      "australiacentral": "AUS Eastern Standard Time",
      "australiacentral2": "AUS Eastern Standard Time",
      "australiaeast": "AUS Eastern Standard Time",
      "australiasoutheast": "AUS Eastern Standard Time",
      "brazilsouth": "E. South America Standard Time",
      "brazilsoutheast": "E. South America Standard Time",
      "canadacentral": "Eastern Standard Time",
      "canadaeast": "Eastern Standard Time",
      "centralindia": "India Standard Time",
      "centralus": "Central Standard Time",
      "chinaeast": "China Standard Time",
      "chinaeast2": "China Standard Time",
      "chinanorth": "China Standard Time",
      "chinanorth2": "China Standard Time",
      "eastasia": "China Standard Time",
      "eastus": "Eastern Standard Time",
      "eastus2": "Eastern Standard Time",
      "francecentral": "Central Europe Standard Time",
      "francesouth": "Central Europe Standard Time",
      "germanynorth": "Central Europe Standard Time",
      "germanywestcentral": "Central Europe Standard Time",
      "japaneast": "Tokyo Standard Time",
      "japanwest": "Tokyo Standard Time",
      "jioindiacentral": "India Standard Time",
      "jioindiawest": "India Standard Time",
      "koreacentral": "Korea Standard Time",
      "koreasouth": "Korea Standard Time",
      "northcentralus": "Central Standard Time",
      "northeurope": "GMT Standard Time",
      "norwayeast": "Central Europe Standard Time",
      "norwaywest": "Central Europe Standard Time",
      "southafricanorth": "South Africa Standard Time",
      "southafricawest": "South Africa Standard Time",
      "southcentralus": "Central Standard Time",
      "southindia": "India Standard Time",
      "southeastasia": "Singapore Standard Time",
      "swedencentral": "Central Europe Standard Time",
      "switzerlandnorth": "Central Europe Standard Time",
      "switzerlandwest": "Central Europe Standard Time",
      "uaecentral": "Arabian Standard Time",
      "uaenorth": "Arabian Standard Time",
      "uksouth": "GMT Standard Time",
      "ukwest": "GMT Standard Time",
      "usdodcentral": "Central Standard Time",
      "usdodeast": "Eastern Standard Time",
      "usgovarizona": "Mountain Standard Time",
      "usgoviowa": "Central Standard Time",
      "usgovtexas": "Central Standard Time",
      "usgovvirginia": "Eastern Standard Time",
      "westcentralus": "Mountain Standard Time",
      "westeurope": "Central Europe Standard Time",
      "westindia": "India Standard Time",
      "westus": "Pacific Standard Time",
      "westus2": "Pacific Standard Time",
      "westus3": "Mountain Standard Time"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-10-01",
      "name": "[parameters('ResourceGroupName')]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('LogAnalyticsWorkspace_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceName": {
            "value": "[parameters('LogAnalyticsWorkspaceName')]"
          },
          "SessionHostExpirationInDays": {
            "value": "[parameters('SessionHostExpirationInDays')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "2825400617272471501"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "SessionHostExpirationInDays": {
              "type": "int"
            },
            "Tags": {
              "type": "object"
            }
          },
          "variables": {
            "LogAnalyticsWorkspaceRetention": "[if(lessOrEquals(parameters('SessionHostExpirationInDays'), 30), 30, parameters('SessionHostExpirationInDays'))]"
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('LogAnalyticsWorkspaceName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[variables('LogAnalyticsWorkspaceRetention')]",
                "workspaceCapping": {
                  "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
            },
            "workspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName')), '2021-06-01').customerId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('DistributionGroup')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ActionGroup_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ActionGroupName": {
            "value": "[parameters('ActionGroupName')]"
          },
          "DistributionGroup": {
            "value": "[parameters('DistributionGroup')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "10394107176150226047"
            }
          },
          "parameters": {
            "ActionGroupName": {
              "type": "string"
            },
            "DistributionGroup": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2022-06-01",
              "name": "[parameters('ActionGroupName')]",
              "location": "global",
              "tags": "[parameters('Tags')]",
              "properties": {
                "emailReceivers": [
                  {
                    "emailAddress": "[parameters('DistributionGroup')]",
                    "name": "[parameters('DistributionGroup')]",
                    "useCommonAlertSchema": true
                  }
                ],
                "enabled": true,
                "groupShortName": "AVD MGMT"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('DistributionGroup')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Alerts_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ActionGroupResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('ActionGroup_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceId.value]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceId.value]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "10696184454833942658"
            }
          },
          "parameters": {
            "ActionGroupResourceId": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "variables": {
            "Alerts": [
              {
                "name": "Remove Expired AVD Session Hosts - Failure",
                "description": "Sends an error alert when the runbook fails to execute.",
                "severity": 0,
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "criteria": {
                  "allOf": [
                    {
                      "query": "AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Failed to remove session hosts\"",
                      "timeAggregation": "Count",
                      "dimensions": [
                        {
                          "name": "ResultDescription",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ],
                      "operator": "GreaterThanOrEqual",
                      "threshold": 1,
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": 1,
                        "minFailingPeriodsToAlert": 1
                      }
                    }
                  ]
                }
              },
              {
                "name": "Remove Expired AVD Session Hosts - Success",
                "description": "Sends an informational alert when AVD session hosts are removed.",
                "severity": 3,
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "criteria": {
                  "allOf": [
                    {
                      "query": "AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Removed session host\"",
                      "timeAggregation": "Count",
                      "dimensions": [
                        {
                          "name": "ResultDescription",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ],
                      "operator": "GreaterThanOrEqual",
                      "threshold": 1,
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": 1,
                        "minFailingPeriodsToAlert": 1
                      }
                    }
                  ]
                }
              }
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "scheduledQueryRules",
                "count": "[length(range(0, length(variables('Alerts'))))]"
              },
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2022-06-15",
              "name": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].name]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "kind": "LogAlert",
              "properties": {
                "actions": {
                  "actionGroups": [
                    "[parameters('ActionGroupResourceId')]"
                  ]
                },
                "autoMitigate": false,
                "skipQueryValidation": false,
                "criteria": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].criteria]",
                "description": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].description]",
                "displayName": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].name]",
                "enabled": true,
                "evaluationFrequency": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].evaluationFrequency]",
                "severity": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].severity]",
                "windowSize": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].windowSize]",
                "scopes": [
                  "[parameters('LogAnalyticsWorkspaceResourceId')]"
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('ActionGroup_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('HostPool_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('HostPoolResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "HostPoolName": {
            "value": "[parameters('HostPoolName')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "12932011847917064147"
            }
          },
          "parameters": {
            "HostPoolName": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('HostPoolName'))]",
              "name": "[format('diag-{0}', parameters('HostPoolName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "Connection",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('AutomationAccount_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountName": {
            "value": "[parameters('AutomationAccountName')]"
          },
          "HostPoolName": {
            "value": "[parameters('HostPoolName')]"
          },
          "HostPoolResourceGroupName": {
            "value": "[parameters('HostPoolResourceGroupName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceId.value]"
          },
          "RunbookName": {
            "value": "[variables('RunbookName')]"
          },
          "SessionHostExpirationInDays": {
            "value": "[parameters('SessionHostExpirationInDays')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "TimeZone": {
            "value": "[variables('TimeZone')]"
          },
          "WorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp'))), '2022-09-01').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "4781481171641662343"
            }
          },
          "parameters": {
            "AutomationAccountName": {
              "type": "string"
            },
            "HostPoolName": {
              "type": "string"
            },
            "HostPoolResourceGroupName": {
              "type": "string"
            },
            "JobScheduleName": {
              "type": "string",
              "defaultValue": "[newGuid()]"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "RunbookName": {
              "type": "string"
            },
            "SessionHostExpirationInDays": {
              "type": "int"
            },
            "Tags": {
              "type": "object"
            },
            "Time": {
              "type": "string",
              "defaultValue": "[utcNow('u')]"
            },
            "TimeZone": {
              "type": "string"
            },
            "WorkspaceId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('AutomationAccountName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Free"
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
              "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "JobLogs",
                    "enabled": true
                  },
                  {
                    "category": "JobStreams",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('RunbookName'))]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "runbookType": "PowerShell",
                "logProgress": false,
                "logVerbose": false,
                "publishContentLink": {
                  "uri": "https://raw.githubusercontent.com/jamasten/RemoveExpiredAvdPersonalSessionHosts/main/artifacts/Remove-StaleHosts.ps1",
                  "version": "1.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/schedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('RunbookName'))]",
              "properties": {
                "frequency": "Day",
                "interval": 1,
                "startTime": "[dateTimeAdd(parameters('Time'), 'PT15M')]",
                "timeZone": "[parameters('TimeZone')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), parameters('RunbookName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/jobSchedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('JobScheduleName'))]",
              "properties": {
                "parameters": {
                  "EnvironmentName": "[environment().name]",
                  "HostPoolName": "[parameters('HostPoolName')]",
                  "HostPoolResourceGroupName": "[parameters('HostPoolResourceGroupName')]",
                  "SessionHostExpirationInDays": "[string(parameters('SessionHostExpirationInDays'))]",
                  "SubscriptionId": "[subscription().subscriptionId]",
                  "TenantId": "[subscription().tenantId]",
                  "WorkspaceId": "[parameters('WorkspaceId')]"
                },
                "runbook": {
                  "name": "[parameters('RunbookName')]"
                },
                "schedule": {
                  "name": "[parameters('RunbookName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), parameters('RunbookName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('AutomationAccountName'), parameters('RunbookName'))]"
              ]
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('LogAnalyticsWorkspace_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignments",
        "count": "[length(range(0, length(variables('RoleAssignments'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RoleAssignments_{0}_{1}', range(0, length(variables('RoleAssignments')))[copyIndex()], parameters('Timestamp'))]",
      "resourceGroup": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].scope]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "RoleDefinitionId": {
            "value": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].roleDefinitionId]"
          },
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "18019906590964517932"
            }
          },
          "parameters": {
            "RoleDefinitionId": {
              "type": "string"
            },
            "PrincipalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]"
      ]
    }
  ]
}